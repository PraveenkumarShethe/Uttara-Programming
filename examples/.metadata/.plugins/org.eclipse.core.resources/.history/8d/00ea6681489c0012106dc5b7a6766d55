package com.tecnomen.httpclient;

import java.io.IOException;
import java.util.Iterator;

import net.sf.json.JSONObject;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpConnectionManager;
import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.MultiThreadedHttpConnectionManager;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.params.HttpConnectionManagerParams;

public class LoginLoadTest extends LoadTest {
	


	private String sigInfoJson = "{}";

	private NameValuePair[] reqParams;

	public String getSigInfoJson() {
		return sigInfoJson;
	}

	public void setSigInfoJson(String sigInfoJson) {
		this.sigInfoJson = sigInfoJson;
		this.setReqParams(addSigParamTpHttpRequest(sigInfoJson));
	}

	public NameValuePair[] addSigParamTpHttpRequest(String sigInfoJson) {
		JSONObject sigObj = new JSONObject(sigInfoJson);
		Iterator<String> keys = sigObj.keys();
		NameValuePair[] nvps=new NameValuePair[sigObj.length()];
		//List<NameValuePair> nvps = new ArrayList<NameValuePair>();
		int i=0;
		while (keys.hasNext()) {
			String key = keys.next();
			nvps[i]=new NameValuePair(key, sigObj.optString(key, ""));
			i++;

		}

		return nvps;
	}

	public NameValuePair[] getReqParams() {
		return reqParams;
	}

	public void setReqParams(NameValuePair[]reqParams) {
		this.reqParams = reqParams;
	}

	public void runSimpleLoginLoadTest() {
	   HttpClient httpClient=getHttpClient();
       PostMethod postMethod=new PostMethod(getAsvip()+"mas/login");       
       postMethod.addParameters(getReqParams());
      // RequestEntity re = new StringRequestEntity(raw_body, "text/xml", "UTF-16");

       try {
		int statuscode=httpClient.executeMethod(postMethod);
		byte[] responseBody = postMethod.getResponseBody();
		postMethod.releaseConnection();
		System.out.println(statuscode +"  RESPONSE  ---- "+new String(responseBody));
	} catch (HttpException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
		
		
	}

	public HttpClient getHttpClient() {
		HttpConnectionManagerParams params = new HttpConnectionManagerParams();
		HttpConnectionManager manager = new MultiThreadedHttpConnectionManager();
		manager.setParams(params);
		return new HttpClient(manager);

	}
	
	public static void main(String[] args) {
		
	}
	
	

}
